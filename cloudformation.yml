AWSTemplateFormatVersion: "2010-09-09"
Description: CI/CD + S3 bucket Website Hosting for Personnal Blog

#-------------------------------------------------------------------------------
#--[ PARAMETERS ]---------------------------------------------------------------
#-------------------------------------------------------------------------------
Parameters:
  BuildBucket:
    Description: S3 Build bucket
    Type: String

  BucketName:
    Description: S3 website bucket
    Type: String

  CacheControlMaxAge:
    Description: Cache Control for S3 synchronization (default 5 min)
    Type: Number
    Default: 300

  CertificateArn:
    Description: Certificate ARN, located in us-east-1, for CloudFront Distribution CNAME
    Type: String

  StaticCertificateArn:
    Description: Certificate ARN, located in us-east-1, for CloudFront Distribution CNAME
    Type: String

  GitHubUser:
    Description: GitHub user
    Type: String

  GitHubRepo:
    Description: GitHub repository
    Type: String

  GitHubBranch:
    Description: Gith branch for
    Type: String

  GitHubToken:
    Description: GitHub personal token
    Type: String
    NoEcho: true

  HostedZoneName:
    Description: Hosted Zone Name, obviously
    Type: String

  RecordName:
    Description: Name of the record set (without the hosted zone name, just the last subdomain)
    Type: String

  SlackHook:
    Description: Slack hook
    Type: String
    NoEcho: true

#-------------------------------------------------------------------------------
#--[ RESOURCES ]----------------------------------------------------------------
#-------------------------------------------------------------------------------
Resources:
  S3WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    DeletionPolicy: Retain

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3WebsiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "S3WebsiteBucket"
                  - "/*"
            Principal: "*"

  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref BucketName
        Comment: !Ref BucketName
        DefaultRootObject: index.html
        Enabled: True
        IPV6Enabled: True
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: True
          TargetOriginId: !Sub S3-Website-${BucketName}
          ViewerProtocolPolicy: redirect-to-https
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !Sub ${BucketName}.s3-website.${AWS::Region}.amazonaws.com
            Id: !Sub S3-Website-${BucketName}
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
      Tags:
        - Key: Env
          Value: prod
        - Key: Name
          Value: wiki

  Route53RecordSetIPv4:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudfrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Comment: !Ref BucketName
      HostedZoneName: !Ref HostedZoneName
      Name: !Sub ${RecordName}.${HostedZoneName}
      Type: A

  Route53RecordSetIPv6:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudfrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Comment: !Ref BucketName
      HostedZoneName: !Ref HostedZoneName
      Name: !Sub ${RecordName}.${HostedZoneName}
      Type: AAAA

  S3StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub static.${BucketName}
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain

  StaticWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3StaticWebsiteBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: "S3StaticWebsiteBucket"
                  - "/*"
            Principal: "*"

  StaticCloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub static.${BucketName}
        Comment: !Sub static.${BucketName}
        DefaultRootObject: ""
        Enabled: True
        IPV6Enabled: True
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: True
          TargetOriginId: !Sub S3-Website-static-${BucketName}
          ViewerProtocolPolicy: redirect-to-https
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
            DomainName: !Sub static.${BucketName}.s3-website.${AWS::Region}.amazonaws.com
            Id: !Sub S3-Website-static-${BucketName}
        ViewerCertificate:
          AcmCertificateArn: !Ref StaticCertificateArn
          SslSupportMethod: sni-only
      Tags:
        - Key: Env
          Value: prod
        - Key: Name
          Value: wiki

  StaticRoute53RecordSetIPv4:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt StaticCloudfrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Comment: !Sub static.${BucketName}
      HostedZoneName: !Ref HostedZoneName
      Name: !Sub static.${RecordName}.${HostedZoneName}
      Type: A

  StaticRoute53RecordSetIPv6:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt StaticCloudfrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Comment: !Sub static.${BucketName}
      HostedZoneName: !Ref HostedZoneName
      Name: !Sub static.${RecordName}.${HostedZoneName}
      Type: AAAA

Outputs:
  WebsiteURL:
    Value: !GetAtt [S3WebsiteBucket, WebsiteURL]
    Description: URL for website hosted on S3
    Export:
      Name: WebsiteURL
  S3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [S3WebsiteBucket, DomainName]]]
    Description: Name of S3 bucket to hold website content
    Export:
      Name: WebsiteSecureURL
  StaticWebsiteURL:
    Value: !GetAtt [S3StaticWebsiteBucket, WebsiteURL]
    Description: URL for static files hosted on S3
    Export:
      Name: StaticWebsiteURL
  StaticS3BucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt [S3StaticWebsiteBucket, DomainName]]]
    Description: Name of S3 bucket to hold static content
    Export:
      Name: StaticWebsiteSecureURL
